services:
  app:
    build: .
    container_name: glitch-core-app
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=${REDIS_URL}
      - QDRANT_URL=${QDRANT_URL}
      - OLLAMA_URL=${OLLAMA_URL}
      - MODEL_PATH=/models
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - ./models:/models
      - ./frontend:/app/frontend
      - ./src:/app/src
      - ./tests:/app/tests
      - ./pyproject.toml:/app/pyproject.toml
      - ./uv.lock:/app/uv.lock
    depends_on:
      - redis
      - qdrant
      - ollama
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: glitch-core-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  qdrant:
    image: qdrant/qdrant:v1.15.0
    container_name: glitch-core-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/collections"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    container_name: glitch-core-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  redis_data:
  qdrant_data:
  ollama_data: 